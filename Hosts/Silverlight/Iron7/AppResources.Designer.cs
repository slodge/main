//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Iron7 {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class AppResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal AppResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Iron7.AppResources", typeof(AppResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to include System
        ///include System::Windows
        ///include System::Windows::Media
        ///include System::Windows::Media::Imaging
        ///include System::Windows::Controls
        ///include System::Windows::Shapes
        ///include Microsoft::Phone::Controls::Maps
        ///
        ///def get_brush(color)
        ///  brush = SolidColorBrush.new
        ///  brush.Color = color
        ///  return brush
        ///end
        ///
        ///def init
        ///  $WIDTH = 400
        ///  $HEIGHT = 400
        ///  $BUBBLE_RADIUS = 25
        ///
        ///  $mid_x = ($WIDTH - $BUBBLE_RADIUS)/2
        ///  $mid_y = ($HEIGHT - $BUBBLE_RADIUS)/2
        ///  $last_x = $mid_x
        ///  $last_y = $mid_y [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Accelerometer {
            get {
                return ResourceManager.GetString("Accelerometer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to include System
        ///include System::Windows
        ///include System::Windows::Media
        ///include System::Windows::Media::Imaging
        ///include System::Windows::Controls
        ///include System::Windows::Shapes
        ///include Microsoft::Phone::Controls::Maps
        ///
        ///def init
        ///  $WIDTH = 480
        ///  $HEIGHT = 800
        ///  $SHIP_SIZE = 100
        ///  $HALF_SHIP_SIZE = 50
        ///
        ///  $mid_x = ($WIDTH - $SHIP_SIZE)/2
        ///  $mid_y = ($HEIGHT - $SHIP_SIZE)/2
        ///  $x = $mid_x
        ///  $y = $mid_y
        ///
        ///  # note - if no internet connection, then no ship will show!
        ///  # could work around this by [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AccelerometerSpace {
            get {
                return ResourceManager.GetString("AccelerometerSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;html&gt;
        ///&lt;head&gt;
        ///&lt;title&gt;&lt;/title&gt;
        ///&lt;meta name=&apos;viewport&apos; content=&apos;width=device-width,height=device-height&apos; /&gt; 
        ///&lt;meta name=&quot;viewport&quot; content=&quot;user-scalable=no&quot; /&gt;
        ///&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=EmulateIE7&quot; /&gt;
        ///&lt;link rel=&apos;Stylesheet&apos; type=&quot;text/css&quot; href=&apos;rubycolors.css&apos; /&gt;
        ///&lt;script type=&quot;text/javascript&quot; src=&quot;util.js&quot;&gt;&lt;/script&gt;
        ///&lt;script type=&quot;text/javascript&quot; src=&quot;stringstream.js&quot;&gt;&lt;/script&gt;
        ///&lt;script type=&quot;text/javascript&quot; src=&quot;select.js&quot;&gt;&lt;/script&gt;
        ///&lt;script type=&quot;text/javascript&quot; src=&quot;undo.js [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BaseEditorHtml {
            get {
                return ResourceManager.GetString("BaseEditorHtml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # a simple button game
        ///
        ///include System
        ///include System::Windows
        ///include System::Windows::Media
        ///include System::Windows::Media::Imaging
        ///include System::Windows::Controls
        ///include System::Windows::Shapes
        ///include Microsoft::Phone::Controls::Maps
        ///
        ///CLICKS_PER_GAME = 5
        ///BUTTON_DIMENSION = 100
        ///SPARE_WIDTH = 380
        ///SPARE_HEIGHT = 700
        ///
        ///def set_button_idle_state
        ///  $button.content = &quot;go&quot;
        ///  $button.margin = Thickness.new(0,0,0,0)
        ///  $button.background = SolidColorBrush.new(Colors.red)
        ///  $button.foreground = [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ButtonGame {
            get {
                return ResourceManager.GetString("ButtonGame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # based loosely on https://github.com/jschementi/ironruby-rubyinside-article/blob/master/ruby-circles.html
        ///
        ///include System
        ///include System::Windows
        ///include System::Windows::Shapes
        ///include System::Windows::Media
        ///include System::Windows::Controls
        ///
        ///# called once at startup
        ///def setup
        ///  $draw_on = false
        ///  $d = $d_start = 10
        ///  $color_set = [[255,0,  113,118],
        ///                [255,0,  173,239],
        ///                [255,68, 199,244],
        ///                [255,157,220,249],
        ///                [255,255,235,149]]
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string circle_drawing {
            get {
                return ResourceManager.GetString("circle_drawing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to include System        ///include System::Windows        ///include System::Windows::Controls        ///include System::Windows::Shapes        ///include System::Windows::Media::Animation        ///include System::Windows::Media
        ///
        ///def init
        ///  $layout_root = Host.content_holder        ///  $snowflake = nil        ///
        ///  $random_number = System::Random.new        ///
        ///end
        ///            ///
        ///class Snowflake        ///  def initialize        ///end
        ///        def __init__(self, xaml, randomNumber):        ///
        ///            self.xaml = xaml        ///
        ///            self.randomNumber = randomNumber        ///
        ///            self.x = 0        ///
        ///            self.y = [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string composition_rendering {
            get {
                return ResourceManager.GetString("composition_rendering", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # this script based on fingerpaint
        ///# from http://sigurdsnorteland.wordpress.com/
        ///
        ///include System
        ///include System::Windows
        ///include System::Windows::Media
        ///include System::Windows::Media::Imaging
        ///include System::Windows::Controls
        ///include System::Windows::Shapes
        ///include Microsoft::Phone::Controls::Maps
        ///
        ///def get_brush(color)
        ///  brush = SolidColorBrush.new
        ///  brush.Color = color
        ///  return brush
        ///end
        ///
        ///def create_button(color)
        ///  rectangle = Rectangle.new
        ///  rectangle.height = 40
        ///  rectangle.width = 40 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Drawing {
            get {
                return ResourceManager.GetString("Drawing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to include System
        ///include System::Windows
        ///include System::Windows::Media
        ///include System::Windows::Media::Imaging
        ///include System::Windows::Controls
        ///include System::Windows::Shapes
        ///include Microsoft::Phone::Controls::Maps
        ///
        ///def init
        ///  $initialized=1
        ///  $counter_button=0
        ///
        ///  stack_panel = StackPanel.new
        ///
        ///  $text_block = TextBlock.new
        ///  $text_block.font_size = 40
        ///  $text_block.text_wrapping = TextWrapping.wrap
        ///  stack_panel.children.add($text_block)
        ///
        ///  button1 = Button.new
        ///  button1.content = &quot;pre [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DynamicExamples {
            get {
                return ResourceManager.GetString("DynamicExamples", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # for a full bing maps tutorial, see
        ///# http://msdn.microsoft.com/en-us/wp7trainingcourse_usingbingmapslab_topic2
        ///
        ///include System
        ///include System::Windows
        ///include System::Windows::Media
        ///include System::Windows::Media::Imaging
        ///include System::Windows::Controls
        ///include System::Windows::Shapes
        ///include Microsoft::Phone::Controls::Maps
        ///
        ///def init
        ///  $initialized = 1
        ///  stack_panel = StackPanel.new
        ///  map = Map.new
        ///  map.height = 400
        ///  map.width = 400
        ///  # this key for Iron7 use only
        ///  # to create your [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FirstMap {
            get {
                return ResourceManager.GetString("FirstMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to include System::Windows
        ///include System::Windows::Media
        ///include System::Windows::Controls
        ///include System::Windows::Shapes
        ///include System::Windows::Media::Imaging
        ///include Microsoft::Phone::Controls
        ///
        ///def random_string
        ///  items = [
        ///	&quot;WP7&quot;,
        ///	&quot;WindowsPhone&quot;,
        ///	&quot;sunset&quot;,
        ///	&quot;beach&quot;,
        ///	&quot;ruby&quot;,
        ///	&quot;ironruby&quot;]
        ///	
        ///  random = System::Random.new
        ///  which = random.next(items.length)
        ///
        ///  return items[which]
        ///end
        ///
        ///def init
        ///  scroll_viewer = ScrollViewer.new
        ///  stack_panel_main = StackPanel.new
        ///
        ///  $textbox_1 = [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Flickr {
            get {
                return ResourceManager.GetString("Flickr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # fractal algortithm adapted from http://www.codeproject.com/KB/WPF/Fractals.aspx
        ///# used under the Code Project Open License - huge thanks to &quot;logicchild&quot;
        ///# note that drawing a fractal using lots of &quot;Line&quot; instances is not the most optimal way to draw!
        ///
        ///include System
        ///include System::Windows
        ///include System::Windows::Media
        ///include System::Windows::Media::Imaging
        ///include System::Windows::Controls
        ///include System::Windows::Shapes
        ///include Microsoft::Phone::Controls::Maps
        ///
        ///def init
        ///  $FRACTAL_WIDTH = [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FractalTree {
            get {
                return ResourceManager.GetString("FractalTree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # clock based on http://www.infoq.com/articles/ironruby-wpf
        ///# author Edd Morgan
        ///# used with permission - thanks Edd!
        ///	
        ///include System
        ///include System::Windows
        ///include System::Windows::Media
        ///include System::Windows::Media::Imaging
        ///include System::Windows::Controls
        ///include System::Windows::Shapes
        ///include Microsoft::Phone::Controls::Maps
        ///
        ///def create_hand(color, thickness)
        ///  hand = Line.new
        ///  hand.stroke = SolidColorBrush.new(color)
        ///  hand.stroke_thickness = thickness
        ///  hand.stroke_end_line_cap = [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GraphicsExample {
            get {
                return ResourceManager.GetString("GraphicsExample", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to include System
        ///include System::Windows
        ///include System::Windows::Media
        ///include System::Windows::Media::Imaging
        ///include System::Windows::Controls
        ///include System::Windows::Shapes
        ///include Microsoft::Phone::Controls::Maps
        ///
        ///def init
        ///  stack_panel_main = StackPanel.new
        ///  stack_panel_main.horizontal_alignment = HorizontalAlignment.center
        ///
        ///  $textbox1 = TextBox.new
        ///  $textbox1.text = &quot;Hello&quot;
        ///  stack_panel_main.children.add($textbox1)
        ///
        ///  textblock_plus = TextBlock.new
        ///  textblock_plus.text = &quot;+&quot;
        ///  s [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string LogicExample {
            get {
                return ResourceManager.GetString("LogicExample", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # mandelbrot algortithm adapted from http://www.codeproject.com/KB/graphics/mandelbrot.aspx
        ///# note that this is not a very optimal drawing mechanism!
        ///# there are lots of interesting (beautiful) mandelbrot sites online
        ///# note that different algorithm draw the axes at different angles - can get very confusing!
        ///
        ///include System
        ///include System::Windows
        ///include System::Windows::Media
        ///include System::Windows::Media::Imaging
        ///include System::Windows::Controls
        ///include System::Windows::Shapes
        ///include Micros [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MandelBrotDrawing {
            get {
                return ResourceManager.GetString("MandelBrotDrawing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # for full bing maps sample, see
        ///# http://msdn.microsoft.com/en-us/wp7trainingcourse_usingbingmapslab_topic2
        ///
        ///include System
        ///include System::Windows
        ///include System::Windows::Media
        ///include System::Windows::Media::Imaging
        ///include System::Windows::Controls
        ///include System::Windows::Shapes
        ///include Microsoft::Phone::Controls::Maps
        ///
        ///def create_text_block(color, size, text)
        ///  textBlock = TextBlock.new
        ///  textBlock.text = text
        ///  textBlock.foreground = SolidColorBrush.new(color) unless color.nil?
        ///  text [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MapWithLocation {
            get {
                return ResourceManager.GetString("MapWithLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to include System
        ///include System::Windows
        ///include System::Windows::Input
        ///include System::Windows::Media
        ///include System::Windows::Media::Imaging
        ///include System::Windows::Controls
        ///include System::Windows::Shapes
        ///include Microsoft::Phone::Controls::Maps
        ///
        ///def numeric_input_scope(textbox)
        ///  numeric_input = InputScope.new 
        ///  textbox.input_scope = numeric_input
        ///  numeric_input_name = InputScopeName.new 
        ///  numeric_input_name.name_value = InputScopeNameValue.Number
        ///  numeric_input.names.add(numeric_input_ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MathsExample {
            get {
                return ResourceManager.GetString("MathsExample", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to include System
        ///include System::Windows
        ///include System::Windows::Media
        ///include System::Windows::Media::Imaging
        ///include System::Windows::Controls
        ///include System::Windows::Shapes
        ///include Microsoft::Phone::Controls::Maps
        ///
        ///def init
        ///
        ///  $text_block_x = TextBlock.new
        ///  $text_block_y = TextBlock.new
        ///  $text_block_z = TextBlock.new
        ///
        ///  text_stack_panel = StackPanel.new
        ///  text_stack_panel.children.add($text_block_x)
        ///  text_stack_panel.children.add($text_block_y)
        ///  text_stack_panel.children.add($text_bl [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string NewAccelerometerAppTemplate {
            get {
                return ResourceManager.GetString("NewAccelerometerAppTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to include System
        ///include System::Windows
        ///include System::Windows::Media
        ///include System::Windows::Media::Imaging
        ///include System::Windows::Controls
        ///include System::Windows::Shapes
        ///include Microsoft::Phone::Controls::Maps
        ///
        ///def init
        ///	text_block = TextBlock.new
        ///	text_block.text = &quot;HELLO WORLD&quot;
        ///	text_block.font_size = 64
        ///
        ///	Host.content_holder.children.add(text_block)
        ///
        ///	$initialized = 1
        ///end
        ///
        ///init if $initialized.nil?
        ///.
        /// </summary>
        internal static string NewAppTemplate {
            get {
                return ResourceManager.GetString("NewAppTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to include System
        ///include System::Windows
        ///include System::Windows::Media
        ///include System::Windows::Media::Imaging
        ///include System::Windows::Controls
        ///include System::Windows::Shapes
        ///include Microsoft::Phone::Controls::Maps
        ///
        ///def init
        ///  $initialized=1
        ///  $timer_count=0
        ///
        ///  stack_panel = StackPanel.new
        ///
        ///  $text_block = TextBlock.new
        ///  $text_block.font_size = 40
        ///  stack_panel.children.add($text_block)
        ///
        ///  button = Button.new
        ///  button.content = &quot;reset&quot;
        ///  stack_panel.children.add(button)
        ///
        ///  Host.cont [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string NewButtonAndTimerAppTemplate {
            get {
                return ResourceManager.GetString("NewButtonAndTimerAppTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to include System
        ///include System::Windows
        ///include System::Windows::Media
        ///include System::Windows::Media::Imaging
        ///include System::Windows::Controls
        ///include System::Windows::Shapes
        ///include Microsoft::Phone::Controls::Maps
        ///
        ///def init
        ///  $WIDTH     = 800
        ///  $HEIGHT    = 800
        ///
        ///  $canvas = Canvas.new
        ///  $canvas.width = $WIDTH
        ///  $canvas.height = $HEIGHT
        ///
        ///  Host.content_holder.children.add($canvas)
        ///
        ///  ellipse_params = {
        ///    &quot;margin_left&quot;=&gt;10, 
        ///    &quot;margin_top&quot;=&gt;10, 
        ///    &quot;width&quot;=&gt;100, 
        ///    &quot;height&quot;=&gt;20 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string NewCanvasTemplate {
            get {
                return ResourceManager.GetString("NewCanvasTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to include System
        ///include System::Windows
        ///include System::Windows::Media
        ///include System::Windows::Media::Imaging
        ///include System::Windows::Controls
        ///include System::Windows::Shapes
        ///include Microsoft::Phone::Controls::Maps
        ///
        ///def create_text_block(color, size, text)
        ///  textBlock = TextBlock.new
        ///  textBlock.text = text
        ///  textBlock.foreground = SolidColorBrush.new(color) unless color.nil?
        ///  textBlock.font_size = size
        ///  textBlock.text_wrapping = TextWrapping.Wrap
        ///  return textBlock
        ///end
        ///
        ///def init
        ///  sta [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string NewLocationAppTemplate {
            get {
                return ResourceManager.GetString("NewLocationAppTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # for a longer but similar tutorial
        ///# try http://www.troubleshooters.com/codecorn/ruby/basictutorial.htm
        ///# an excellent overview by Steve Litt
        ///
        ///# first let&apos;s set up a console
        ///include System::Windows
        ///include System::Windows::Controls
        ///include System::Windows::Media
        ///
        ///# note that $ before a variable name simply 
        ///# makes that variable global
        ///$stack = StackPanel.new
        ///scroll = ScrollViewer.new
        ///scroll.content = $stack
        ///Host.content_holder.children.add(scroll)
        ///
        ///def add_text_block(t, size, color)
        ///  tb  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RubyIntro {
            get {
                return ResourceManager.GetString("RubyIntro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # adapted from MonoDroid sample - used under MIT license
        ///# original https://github.com/mono/monodroid-samples
        ///# thanks to jpobst
        ///
        ///include System
        ///include System::Windows
        ///include System::Windows::Media
        ///include System::Windows::Media::Imaging
        ///include System::Windows::Controls
        ///include System::Windows::Shapes
        ///include Microsoft::Phone::Controls::Maps
        ///
        ///def init
        ///  $pixels_per_square = 40
        ///  $WIDTH = 480/$pixels_per_square
        ///  $HEIGHT = 800/$pixels_per_square
        ///
        ///  $color_head = Color.from_argb(255,0,255, [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SnakeGame {
            get {
                return ResourceManager.GetString("SnakeGame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # originally based on https://github.com/jschementi/ironruby-rubyinside-article/blob/master/ruby-squares.html
        ///# this script uses a timer for simple animation
        ///# the alien images used come royalty free from clker.com
        ///# sounds from http://www.freesound.org/samplesViewSingle.php?id=18397
        ///# and from http://www.freesound.org/samplesViewSingle.php?id=76966
        ///# all used under creative commons licensing
        ///
        ///include System
        ///include System::Windows
        ///include System::Windows::Shapes
        ///include System::Windows::Media
        ///in [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string square_aliens {
            get {
                return ResourceManager.GetString("square_aliens", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # originally based on https://github.com/jschementi/ironruby-rubyinside-article/blob/master/ruby-squares.html
        ///# this script uses a timer for simple animation
        ///# there are smoother animation techniques for WP7
        ///
        ///include System
        ///include System::Windows
        ///include System::Windows::Shapes
        ///include System::Windows::Media
        ///include System::Windows::Controls
        ///
        ///def setup
        ///  $canvas = Canvas.new
        ///  add_squares(10)
        ///  Host.content_holder.children.add($canvas)
        ///  Host.fix_orientation_portrait
        ///  Host.start_timer(&quot;time [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string square_animating {
            get {
                return ResourceManager.GetString("square_animating", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # originally based on https://github.com/jschementi/ironruby-rubyinside-article/blob/master/ruby-squares.html
        ///# this script uses a timer for simple animation
        ///# there are smoother animation techniques for WP7
        ///
        ///include System
        ///include System::Windows
        ///include System::Windows::Shapes
        ///include System::Windows::Media
        ///include System::Windows::Controls
        ///
        ///def setup
        ///  $speed = 21
        ///  $canvas = Canvas.new
        ///  Host.content_holder.children.add($canvas)
        ///  Host.fix_orientation_portrait
        ///  Host.start_timer(&quot;timer1&quot;, [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string square_animating_game {
            get {
                return ResourceManager.GetString("square_animating_game", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # originally based on https://github.com/jschementi/ironruby-rubyinside-article/blob/master/ruby-squares.html
        ///
        ///include System
        ///include System::Windows
        ///include System::Windows::Shapes
        ///include System::Windows::Media
        ///include System::Windows::Controls
        ///
        ///def setup
        ///  $canvas = Canvas.new
        ///  Host.content_holder.children.add($canvas)
        ///  Host.fix_orientation_portrait
        ///  Host.start_timer(&quot;timer1&quot;, TimeSpan.from_seconds(0.1), &quot;add_squares&quot;)
        ///end
        ///
        ///def add_squares
        ///  if $canvas.children.count &gt; 500
        ///    Host.st [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string square_drawing {
            get {
                return ResourceManager.GetString("square_drawing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # everyone needs a hello world example
        ///
        ///include System::Windows::Controls
        ///
        ///text_block = TextBlock.new
        ///text_block.text = &quot;HELLO WORLD&quot;
        ///text_block.font_size = 64
        ///
        ///Host.content_holder.children.add(text_block)
        ///.
        /// </summary>
        internal static string StaticHelloWorld {
            get {
                return ResourceManager.GetString("StaticHelloWorld", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # Credit for code logic (license open - see original sites for more info) to:
        ///# http://www.silverlight.net/community/samples/silverlight-samples/yygames---yytetris/
        ///# http://sigurdsnorteland.wordpress.com/2010/11/15/tetris7-a-wp7-game-source-code-included/
        ///# Credit for sound effects (creative commons 2) to:
        ///# Grunz - http://www.freesound.org/samplesViewSingle.php?id=109663
        ///# Synapse - http://www.freesound.org/samplesViewSingle.php?id=2324
        ///# Stuckinthemud - http://www.freesound.org/samplesViewSingle.ph [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Tetris {
            get {
                return ResourceManager.GetString("Tetris", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to include System
        ///include System::Windows
        ///include System::Windows::Media
        ///include System::Windows::Media::Imaging
        ///include System::Windows::Controls
        ///include System::Windows::Shapes
        ///include Microsoft::Phone::Controls::Maps
        ///
        ///def init
        ///  $initialized=1
        ///  $counter_timer=0
        ///
        ///  stack_panel = StackPanel.new
        ///
        ///  $text_block = TextBlock.new
        ///  $text_block.font_size = 40
        ///  $text_block.text_wrapping = TextWrapping.wrap
        ///  stack_panel.children.add($text_block)
        ///
        ///  Host.content_holder.horizontal_alignment = Hori [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TimerExample {
            get {
                return ResourceManager.GetString("TimerExample", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to include System
        ///include System::Windows
        ///include System::Windows::Media
        ///include System::Windows::Media::Imaging
        ///include System::Windows::Controls
        ///include System::Windows::Shapes
        ///include Microsoft::Phone::Controls::Maps
        ///
        ///def random_string
        ///  items = [
        ///	&quot;WP7&quot;,
        ///	&quot;WindowsPhone&quot;,
        ///	&quot;sunset&quot;,
        ///	&quot;beach&quot;,
        ///	&quot;slodge&quot;,
        ///	&quot;ruby&quot;,
        ///	&quot;ironruby&quot;]
        ///	
        ///  random = System::Random.new
        ///  which = random.next(items.length)
        ///
        ///  return items[which]
        ///end
        ///
        ///def init
        ///  stack_panel_main = StackPanel.new
        ///
        ///  $textbox_1 = T [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Twitter {
            get {
                return ResourceManager.GetString("Twitter", resourceCulture);
            }
        }
    }
}

# originally based on https://github.com/jschementi/ironruby-rubyinside-article/blob/master/ruby-squares.html
# this script uses a timer for simple animation
# there are smoother animation techniques for WP7

include System
include System::Windows
include System::Windows::Shapes
include System::Windows::Media
include System::Windows::Controls

def setup
  $canvas = Canvas.new
  add_squares(10)
  Host.content_holder.children.add($canvas)
  Host.fix_orientation_portrait
  Host.start_timer("timer1", TimeSpan.from_seconds(0.05), "animate")
end

def add_squares(count)
  count.times do |i|
    my_square(15)
  end
end

def my_square(length)
  size = rand(480 / length) + 20
  left = rand(480 - size)
  top = rand(800 - size)
  speed_x = rand(31) - 15
  speed_y = rand(31) - 15
  rect = Rectangle.new
  rect.width = size
  rect.height = size
  rect.fill = rand_brush
  rect.stroke = rand_brush
  rect.stroke_thickness = rand(480 / (length * 7)) + 4
  rect.margin = Thickness.new(left,top,0,0)
  rect.tag = { "left"=>left, "top"=>top, "x"=>speed_x, "y"=>speed_y }
  $canvas.children.add(rect)
end
    
def brushes
  $brushes ||= %W(red orange yellow cyan blue magenta green).map do |c| 
    SolidColorBrush.new(Colors.send(c))
  end
end
    
def rand_brush
  brushes[rand(brushes.size)]
end
    
def animate
  $canvas.children.each { |rect|
	left = rect.tag["left"]
	top = rect.tag["top"]
	x = rect.tag["x"]
	y = rect.tag["y"]

	left = left + x
	if left > 480 - rect.width || left < 0
	  x = -x
	end
    top = top + y
	if top > 800- rect.height || top < 0
	  y = -y
	end
	rect.margin = Thickness.new(left,top,0,0)
    rect.tag = { "left"=>left, "top"=>top, "x"=>x, "y"=>y }
  }
end

setup